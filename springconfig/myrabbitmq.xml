<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit 
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
	<!--配置connection-factory，指定连接rabbit server参数 -->
	<!--username="ztadmin" password="ztadmin" host="172.18.15.91" port="5672"  -->
	<rabbit:connection-factory id="connectionFactory"
		username="ztadmin" password="ztadmin" host="172.18.15.91" port="5672" factory-timeout="15000"
		requested-heartbeat="60"
		publisher-confirms="true"
		publisher-returns="true"/>

	<bean id="confirmCallBackListener" class="com.zt.rabbit.helper.ConfirmCallBackListener" />
	<bean id="returnCallBackListener" class="com.zt.rabbit.helper.ReturnCallBackListener" />

	<!-- <bean id="jackson2JsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" /> -->
	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
		exchange="exchange" encoding="UTF-8" routing-key="first_queue_key"
		confirm-callback="confirmCallBackListener"
		return-callback="returnCallBackListener"
		/>
	
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!--定义第一个 queue 审批流-->
	<rabbit:queue name="first_queue" durable="true" auto-delete="false"
		exclusive="false" />
		
	<!--定义第二个 queue 业务流-->
	<rabbit:queue name="second_queue" durable="true" auto-delete="false"
		exclusive="false" />
		
	<!--定义短信 queue -->
	<rabbit:queue name="sms_queue" durable="true" auto-delete="false"
		exclusive="false" />	
		
	<!--定义推送短信发送回执结果 queue -->
	<rabbit:queue name="smscallback_queue" durable="true" auto-delete="false"
		exclusive="false" />	
		
	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:direct-exchange name="exchange" 
		durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="first_queue" key="first_queue_key"></rabbit:binding>
			<rabbit:binding queue="second_queue" key="second_queue_key"></rabbit:binding><!--  绑定第二个队列 -->
			<rabbit:binding queue="sms_queue" key="sms_queue_key"></rabbit:binding>
			<rabbit:binding queue="smscallback_queue" key="smscallback_queue_key"></rabbit:binding><!--  绑定推送短信发送回执结果队列 -->
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.zt.rabbit.helper.MessageConsumer"></bean>
	<!-- 第二个 消息接收者 用来消费 第二个队列-->
	<bean id="messageReceiverSecond" class="com.zt.rabbit.helper.MessageConsumerSecond"></bean>
	<!-- 短信 消息接收者 用来消费 短信队列-->
	<!-- <bean id="messageReceiverForSMS" class="com.zt.rabbit.helper.MessageReceiverForSMS"></bean> -->
	
	<!-- <bean id="testQueueListenerAdapter" class="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter" >
		<constructor-arg ref="messageReceiverSecond2" />
		<property name="defaultListenerMethod" value="test"></property>
		<property name="messageConverter" ref="jsonMessageConverter"></property>
	</bean> -->
	<!-- <rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="auto">
		<rabbit:listener queues="second_queue" ref="testQueueListenerAdapter" method="test"/> 监听第二个队列
	</rabbit:listener-container> -->
	
	<!-- 短信 推送回执消息接收者 用来消费 推送短信发送回执结果队列-->
	<bean id="MessageReceiverForSMSCallBack" class="com.zt.rabbit.helper.MessageReceiverForSMSCallBack"></bean>
	
	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="manual" concurrency="5" max-concurrency="5">
		<rabbit:listener queues="first_queue" ref="messageReceiver" />
		<rabbit:listener queues="second_queue" ref="messageReceiverSecond"/> <!-- 监听第二个队列-->
		<!-- <rabbit:listener queues="sms_queue" ref="messageReceiverForSMS"/> --> <!-- 监听短信队列-->
		<rabbit:listener queues="smscallback_queue" ref="MessageReceiverForSMSCallBack"/> <!-- 监听推送短信发送回执结果队列-->
	</rabbit:listener-container>
</beans>
